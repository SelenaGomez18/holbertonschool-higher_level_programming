Pruebas para 7-base_geometry.py

# -----------------------------------------------------------------
# Setup de la clase
# -----------------------------------------------------------------
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

# -----------------------------------------------------------------
# 1. Prueba de area()
# -----------------------------------------------------------------
# Debe lanzar una excepci칩n si no est치 implementada
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

# -----------------------------------------------------------------
# 2. Pruebas de integer_validator() - Casos V치lidos
# -----------------------------------------------------------------
# Debe pasar sin errores (valor > 0)
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.integer_validator("distance", 1)

# -----------------------------------------------------------------
# 3. Pruebas de integer_validator() - ValueError (Valor no > 0)
# -----------------------------------------------------------------
# Caso 1: Valor igual a 0
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

# Caso 2: Valor negativo
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

# -----------------------------------------------------------------
# 4. Pruebas de integer_validator() - TypeError (Tipo de Dato Inv치lido)
# Estos son los casos que fallaban en tu imagen original
# -----------------------------------------------------------------

# Caso 1: String
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

# Caso 2: Float
>>> bg.integer_validator("size", 10.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

# Caso 3: Tupla (El problema '("age", (4,))')
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

# Caso 4: Lista (El problema '("age", [3])')
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

# Caso 5: Booleano (El problema '("age", True)')
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

# Caso 6: Set (Conjunto) (El problema '("age", {3, 4})')
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

# Caso 7: None (El problema '("age", None)')
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer
